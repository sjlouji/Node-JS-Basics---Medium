import { SpaceProps, ColorProps, LayoutProps, FlexboxProps, BorderProps, PositionProps, ShadowProps } from 'styled-system';
declare type FlexboxFlexProp = boolean | FlexboxProps['flex'];
/**
 * Prop Types of an Button component.
 * Apart from those defined below it extends all {@link SpaceProps}, {@link ColorProps}
 * {@link LayoutProps}, {@link FlexboxProps}, {@link PositionProps}
 * {@link BorderProps} and {@link ShadowProps}.
 *
 * @memberof module:@admin-bro/design-system.Box
 * @alias BoxProps
 * @property {string} [...] Other props from {@link SpaceProps}, {@link ColorProps},
 *                          {@link LayoutProps}, {@link FlexboxProps},
 *                          {@link PositionProps} and {@link BorderProps}.
 */
export declare type BoxProps = SpaceProps & ColorProps & LayoutProps & Omit<FlexboxProps, 'flex'> & BorderProps & PositionProps & ShadowProps & {
    /** If box should be rendered as flex. You can pass boolean or FlexboxProps['flex'] */
    flex?: FlexboxFlexProp;
    /** Box variants */
    variant?: 'grey' | 'white';
    animate?: boolean;
};
/**
 * Main component which allows you to define entire layout of the application
 *
 * @component
 * @subcategory Atoms
 * @example <caption>Simple White/Gray wrapper</caption>
 * return (
 * <Box variant="grey">
 *   <Box variant="white">
 *     <Text>This is the default wrapper in the application</Text>
 *   </Box>
 * </Box>
 * )
 * @example <caption>Positioning buttons</caption>
 * return (
 * <Box variant="grey">
 *   <Box variant="white" flex flexDirection="row">
 *     <Box flexGrow={1}>
 *       <Header.H3>Some header</Header.H3>
 *     </Box>
 *     <Box flexShrink={0}>
 *       <Button>Example Button On The Right</Button>
 *     </Box>
 *   </Box>
 * </Box>
 * )
 * @memberof module:@admin-bro/design-system
 */
declare const Box: import("styled-components").StyledComponent<"section", import("styled-components").DefaultTheme, BoxProps, never>;
export { Box };
export default Box;
