"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Default = void 0;
const react_1 = __importDefault(require("react"));
const addon_knobs_1 = require("@storybook/addon-knobs");
const __1 = require("../..");
exports.default = { title: 'DesignSystem/Molecules/DropZone', decorators: [addon_knobs_1.withKnobs] };
exports.Default = () => {
    const multiple = addon_knobs_1.boolean('If drop zone should handle multiple uploads', false);
    const maxSize = addon_knobs_1.number('Maximum size of the uploaded file in bytes. If not defined - all files are allowed', NaN);
    const mimeTypes = addon_knobs_1.array('Available mime types (separate by ","). When not defined - all mime types are allowed', ['application/pdf']);
    const uploadLimitIn = addon_knobs_1.select('Upload limit display', ['B', 'KB', 'MB', 'GB', 'TB'], 'KB');
    return (react_1.default.createElement(__1.DropZone, { multiple: multiple, validate: {
            maxSize,
            mimeTypes,
        }, uploadLimitIn: uploadLimitIn }));
};
