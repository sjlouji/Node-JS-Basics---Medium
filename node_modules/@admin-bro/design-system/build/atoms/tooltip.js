"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tooltip = void 0;
const react_1 = __importDefault(require("react"));
const styled_components_1 = __importStar(require("styled-components"));
const getBorder = (({ theme }) => theme.colors.primary100);
const StyledTooltip = styled_components_1.default.div `
  position: relative;
`;
const TooltipText = styled_components_1.default.span `
  background-color: ${({ theme }) => theme.colors.bg};
  text-align: center;
  padding: 15px 25px;
  border: 1px solid ${getBorder};
  position: absolute;
  z-index: 1;

  ${({ size }) => ({
    lg: styled_components_1.css `
      width: 283px;
    `,
}[size])}

  ${({ direction }) => ({
    bottom: styled_components_1.css `
      top: 30px;
      left: 50%;
      margin-left: -165px;
    `,
    top: styled_components_1.css `
      bottom: 30px;
      left: 50%;
      margin-left: -165px;
    `,
    right: styled_components_1.css `
      margin-left: 20px;
      top: -20px;
    `,
    left: styled_components_1.css `
      right: 100%;
      margin-right: 20px;
      top: -20px;
    `,
}[direction])}
`;
const Arrow = styled_components_1.default.div `
  position: absolute;
  background-color: ${({ theme }) => theme.colors.bg};
  z-index: 10;
  width: 10px;
  height: 10px;
  
  ${({ direction }) => ({
    bottom: styled_components_1.css `
      top: 25px;
      left: 20px;
      border-left: 1px solid ${getBorder};
      border-bottom: 1px solid ${getBorder};
      transform: rotate(135deg);
    `,
    top: styled_components_1.css `
      bottom: 25px;
      left: 20px;
      border-right: 1px solid ${getBorder};
      border-top: 1px solid ${getBorder};
      transform: rotate(135deg);
    `,
    right: styled_components_1.css `
      top: 0;
      right: -25px;
      border-right: 1px solid ${getBorder};
      border-top: 1px solid ${getBorder};
      transform: rotate(-135deg);
    `,
    left: styled_components_1.css `
      top: 0;
      left: -25px;
      border-right: 1px solid ${getBorder};
      border-top: 1px solid ${getBorder};
      transform: rotate(45deg);
    `,
}[direction])}
`;
/**
 * Renders tooltip
 *
 * Usage:
 * ```javascript
 * import { Tooltip, TooltipProps } from '@admin-bro/design-system'
 * ```
 *
 * @component
 * @subcategory Atoms
 * @example <caption>Tooltip</caption>
 * return (
 *   <Box>
 *     <Tooltip direction="top" tooltipText="example info">
 *      indicator
 *     </Tooltip
 *   </Box>
 * )
 *
 * @memberof module:@admin-bro/design-system
 */
const Tooltip = ({ direction, size, tooltipText, children, }) => (react_1.default.createElement(StyledTooltip, { direction: direction, size: size },
    children,
    react_1.default.createElement(TooltipText, { direction: direction, size: size }, tooltipText),
    react_1.default.createElement(Arrow, { direction: direction, size: size })));
exports.Tooltip = Tooltip;
exports.default = Tooltip;
