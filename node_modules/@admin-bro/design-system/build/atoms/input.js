"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Input = exports.InputCSS = void 0;
const styled_components_1 = __importStar(require("styled-components"));
const styled_system_1 = require("styled-system");
const focus_shadow_style_1 = __importDefault(require("../utils/focus-shadow.style"));
const css_class_1 = require("../utils/css-class");
/**
 * Input CSS Styles which can be reused in another input component with styled-components
 *
 * Usage:
 * ```
 * import { InputCSS } from '@admin-bro/design-system'
 *
 * const MyStyledInput = styled.input`
 *   ${InputCSS}
 * `
 * ```
 * @memberof module:@admin-bro/design-system.Input
 * @alias InputCSS
 */
exports.InputCSS = styled_components_1.css `
  box-sizing: border-box;
  color: ${({ theme }) => theme.colors.grey80};
  background: transparent;
  border: 1px solid ${({ theme }) => theme.colors.inputBorder};
  font-size: ${({ theme }) => theme.fontSizes.default};
  line-height: ${({ theme }) => theme.lineHeights.lg};
  font-family: ${({ theme }) => theme.font};
  outline: none;
  &:hover {
    border-color: ${({ theme }) => theme.colors.grey60};
  }
  &:focus {
    border-color: ${({ theme }) => theme.colors.primary100};
    ${({ theme }) => `box-shadow: ${focus_shadow_style_1.default(theme)}`};
  }
  &:disabled {
    color: ${({ theme }) => theme.colors.grey40};
  }
`;
/**
 * Wrapped `input` html element.
 *
 * Usage:
 * ```javascript
 * import { Input, InputProps, InputCSS } from '@admin-bro/design-system'
 * ```
 *
 * @component
 * @subcategory Atoms
 * @example
 * return (
 *   <Box p="xl">
 *      <Label htmlFor="input1">Some example label</Label>
 *      <Input id="input1" width={1/2} />
 *   </Box>
 * )
 * @memberof module:@admin-bro/design-system
 */
const Input = styled_components_1.default.input `
  ${exports.InputCSS};
  ${styled_system_1.space};
  ${styled_system_1.layout};
`;
exports.Input = Input;
Input.defaultProps = {
    px: 'default',
    py: 'sm',
    className: css_class_1.cssClass('Input'),
};
exports.default = Input;
